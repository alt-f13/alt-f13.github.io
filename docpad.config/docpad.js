// Generated by CoffeeScript 1.11.1
(function() {
  var docpadConfig,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  docpadConfig = {
    templateData: {
      site: {
        url: "http://cm-spb.ru",
        outPath: './output',
        oldUrls: ['www.cm-spb.ru', 'www.plm-spb.ru'],
        title: "Колледж метрополитена",
        description: "Cанкт-петербургское государственное бюджетное профессиональное образовательное учреждение колледж метрополитена",
        keywords: "колледж, образование, санкт-петербург, спб, метрополитен, работа, обучение, профессия, будущее",
        author: "Galyamin.d.d",
        email: "Galyamin.d.d@gmail.com",
        styles: [
          "//netdna.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css",
          "//blueimp.github.io/Gallery/css/blueimp-gallery.min.css",
          "http://fonts.googleapis.com/css?family=Buenard:700",
          "/css/blueimp-gallery.css",
          "/css/blueimp-gallery-indicator.css",
          "/css/blueimp-gallery-video.css",
          "/css/index.css",
          "//cdnjs.cloudflare.com/ajax/libs/flexboxgrid/6.3.1/flexboxgrid.min.css"
          ],
        scripts: ["//netdna.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js", "//blueimp.github.io/Gallery/js/jquery.blueimp-gallery.min.js", "/js/tree.js", "/js/uhpv-full.min.js", "http://pupunzi.com/mb.components/mb.YTPlayer/demo/inc/jquery.mb.YTPlayer.js", "/js/jquery.diamonds.js", "/js/date.js", "https://rawgit.com/kimmobrunfeldt/progressbar.js/1.0.0/dist/progressbar.js", "/js/jquery.vide.js"]
      },
      getPreparedTitle: function() {
        if (this.document.title) {
          return this.document.title + " | " + this.site.title;
        } else {
          return this.site.title;
        }
      },
      getPreparedDescription: function() {
        return this.document.description || this.site.description;
      },
      getPreparedKeywords: function() {
        return this.site.keywords.concat(this.document.keywords || []).join(', ');
      }
    },
    collections: {
      menu: function(database) {
        return database.findAllLive({
          menutitle: {
            $exists: true
          }
        }, [
          {
            pageOrder: 1,
            menutitle: 1
          }
        ]);
      },
      menu2: function(database) {
        return database.findAllLive({
          menu2title: {
            $exists: true
          }
        }, [
          {
            pageOrder: 1,
            menu2title: 1
          }
        ]);
      },
      posts: function(database) {
        return database.findAllLive({
          layout: {
            $has: 'post'
          }
        }, [
          {
            date: -1
          }
        ]);
      },
      faces: function(database) {
        return database.findAllLive({
          layout: {
            $has: 'faces'
          }
        }, [
          {
            lastname: 1
          }
        ]);
      },
      contacts: function(database) {
        return database.findAllLive({
          layout: {
            $has: 'contacts'
          }
        }, [
          {
            order: 1
          }
        ]);
      },
      gallery: function(database) {
        return database.findAllLive({
          layout: {
            $has: 'gallery'
          }
        });
      }
    },
    getArticles: function() {
      return this.getCollection('html').findAllLive({
        type: 'post'
      }, [
        {
          date: -1
        }
      ]);
    },
    getLinks: function() {
      return this.getCollection('html').findAllLive({
        type: 'link'
      }, [
        {
          name: 1
        }
      ]);
    },
    plugins: {
      sitemap: {
        cachetime: 600000,
        changefreq: 'weekly',
        priority: 0.5,
        filePath: 'sitemap.xml',
      }

    },
    events: {
      serverExtend: function(opts) {
        var docpad, latestConfig, newUrl, oldUrls, server;
        server = opts.server;
        docpad = this.docpad;
        latestConfig = docpad.getConfig();
        oldUrls = latestConfig.templateData.site.oldUrls || [];
        newUrl = latestConfig.templateData.site.url;
        return server.use(function(req, res, next) {
          var ref;
          if (ref = req.headers.host, indexOf.call(oldUrls, ref) >= 0) {
            return res.redirect(newUrl + req.url, 301);
          } else {
            return next();
          }
        });
      }
    }
  };

  module.exports = docpadConfig;

}).call(this);
